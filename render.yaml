services:
  # A Docker web service
  - type: web
    name: webdis
    runtime: docker
    rootDir: webdis
    dockerCommand: ./webdis.sh # optional (defaults to Dockerfile command)
    healthCheckPath: /
    envVars:
      - key: REDIS_HOST
        fromService:
          type: redis
          name: lightning
          property: host # available properties are listed below
      - key: REDIS_PORT
        fromService:
          type: redis
          name: lightning
          property: port
      - fromGroup: conc-settings
  # A private Minio instance
  - type: pserv
    name: minio
    runtime: docker
    envVars:
    - key: MINIO_ROOT_PASSWORD
      generateValue: true # will generate a base64-encoded 256-bit secret
    - key: MINIO_ROOT_USER
      sync: false # placeholder for a value to be added in the dashboard
    - key: PORT
      value: 10000
    disk:
      name: data
      mountPath: /data
      sizeMB: 20 # optional
  # A Ruby web service
  - type: web
    name: sinatra
    runtime: ruby
    repo: https://github.com/renderinc/sinatra-example.git
    scaling:
      minInstances: 1
      maxInstances: 3
    buildCommand: bundle install
    startCommand: bundle exec ruby main.rb
    preDeployCommand: bundle exec ruby migrate.rb
    domains:
      - test0.render.com
      - test1.render.com
    envVars:
      - key: STRIPE_API_KEY
        value: Z2V0IG91dHRhIGhlcmUhCg
      - key: DB_URL
        fromDatabase:
          name: elephant
          property: connectionString
      - key: MINIO_ROOT_PASSWORD
        fromService:
          type: pserv
          name: minio
          envVarKey: MINIO_ROOT_PASSWORD
  # A Python cron job that runs every hour
  - type: cron
    name: date
    runtime: python
    schedule: "0 * * * *"
    buildCommand: "true" # ensure it's a string
    startCommand: date
    repo: https://github.com/render-examples/docker.git # optional
  # A background worker that consumes a queue
  - type: worker
    name: queue
    runtime: docker
  # A static site
  - type: web
    name: my blog
    runtime: static
    buildCommand: yarn build
    staticPublishPath: ./build
    buildFilter:
      paths:
      - src/**/*.js
      ignoredPaths:
      - src/**/*.test.js
    headers:
      - path: /*
        name: X-Frame-Options
        value: sameorigin
    routes:
      - type: redirect
        source: /old
        destination: /new
      - type: rewrite
        source: /a/*
        destination: /a
  # A Redis instance
  - type: redis
    name: lightning
    ipAllowList: # required
      - source: 0.0.0.0/0
        description: everywhere

databases:
  - name: elephant
        description: home
        engine: postgres


envVarGroups:
  - name: conc-settings
    envVars:
      - key: CONCURRENCY
        value: 2
      - key: SECRET
        generateValue: true
      - key: USER_PROVIDED_SECRET
        sync: false
  - name: stripe
    envVars:
      - key: STRIPE_API_URL
        value: https://api.stripe.com/v2